[4.4/4.5/4.6/4.7 Regression] global register variables defect

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=43700

--- gcc-4_4-branch/gcc/ChangeLog	2011/05/29 17:51:03	174408
+++ gcc-4_4-branch/gcc/ChangeLog	2011/05/29 18:10:44	174409
@@ -1,3 +1,9 @@
+2011-05-29  Richard Sandiford  <rdsandiford@googlemail.com>
+
+	PR target/43700
+	* config/mips/mips.c (mips_cfun_call_saved_reg_p): Handle global
+	registers.
+
 2011-05-10  Jakub Jelinek  <jakub@redhat.com>
 
 	Backported from mainline
--- gcc-4_4-branch/gcc/config/mips/mips.c	2011/05/29 17:51:03	174408
+++ gcc-4_4-branch/gcc/config/mips/mips.c	2011/05/29 18:10:44	174409
@@ -8495,7 +8495,7 @@
      property here.  */
   return (regno == GLOBAL_POINTER_REGNUM
 	  ? TARGET_CALL_SAVED_GP
-	  : !call_really_used_regs[regno]);
+	  : !global_regs[regno] && !call_really_used_regs[regno]);
 }
 
 /* Return true if the function body might clobber register REGNO.
--- gcc-4_4-branch/gcc/testsuite/ChangeLog	2011/05/29 17:51:03	174408
+++ gcc-4_4-branch/gcc/testsuite/ChangeLog	2011/05/29 18:10:44	174409
@@ -1,3 +1,7 @@
+2011-05-29  Richard Sandiford  <rdsandiford@googlemail.com>
+
+	* gcc.target/mips/reg-var-1.c: New test.
+
 2011-05-20  Jason Merrill  <jason@redhat.com>
 
 	* g++.dg/init/new32.C: New.
--- /dev/null
+++ gcc-4_4-branch/gcc/testsuite/gcc.target/mips/reg-var-1.c	2011/05/29 18:10:44	174409
@@ -0,0 +1,16 @@
+/* { dg-do run } */
+register int g asm ("$18");
+
+void __attribute__((noinline))
+test (void)
+{
+  g = g + 1;
+}
+
+int
+main (void)
+{
+  g = 2;
+  test ();
+  return g != 3;
+}
