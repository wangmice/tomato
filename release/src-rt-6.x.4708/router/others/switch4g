#!/bin/sh

#
# Copyright (C) 2015 shibby
#

MODE=`nvram get wan_proto`
LOCK="/tmp/switch4g.lock"

if [ ! "$MODE" == "lte" ]; then
    exit 0
fi

connect() {
    APN=`nvram get modem_apn`
    DEV=`nvram get modem_dev4g`
    TYP=`nvram get modem_type`
    IFA=`nvram get wan_4g`

    logger 4G MODEM - connecting ...

    if [ "$TYP" == "non-hilink" ]; then
        CONNECTED=0

        while [ $CONNECTED == "0" ]; do
            MODE="AT^NDISDUP=1,1,\"$APN\"" gcom -d $DEV -s /etc/gcom/setverbose.gcom > /tmp/4g.mode

            MODE="AT+CGCONTRDP" gcom -d $DEV -e -s /etc/gcom/setverbose.gcom > /tmp/4g.check
            CHECK1=`cat /tmp/4g.check | grep ERROR | wc -l`
            CHECK2=`cat /tmp/4g.check | grep open | wc -l`
            if [ "$CHECK1" == "1" ]; then
                logger 4G MODEM - device $DEV not connected yet ...
                sleep 5
            elif [ "$CHECK2" == "1" ]; then
                logger 4G MODEM - device $DEV not ready ...
                sleep 5
            else
                logger 4G MODEM - connected ...
                CONNECTED=1
            fi
        done
    fi

    GO=0
    while [ $GO = "0" ]; do
        dhcpc-renew

        CHECKIFA=`ifconfig | grep $IFA | wc -l`
        if [ "$CHECKIFA" == "1" ]; then
            GO=1
            logger 4G MODEM - WAN configured ...
        fi
    done
}

disconnect() {
    DEV=`nvram get modem_dev4g`
    TYP=`nvram get modem_type`

    logger 4G MODEM - disconnecting ...
    dhcpc-release

    if [ "$TYP" == "non-hilink" ]; then
        MODE="AT^NDISDUP=1,0" gcom -d $DEV -s /etc/gcom/setmode.gcom
    fi
}

checkLock() {
    if [ -f $LOCK ]; then #lock exist
        logger 4G MODEM - previous proces of switch4g still working
        exit 0
    fi

    touch $LOCK
}

setPIN() {
    PIN=`nvram get modem_pin`
    IS_PIN=`nvram get modem_pin | wc -w`

    #set pin
    if [ "$IS_PIN" == "1" -a "$TYPE" == "non-hilink" ]; then #only for non-hilink
        PINCODE="$PIN" gcom -d $DEVNR -s /etc/gcom/setpin.gcom
    fi
}

switchMode() {
    MODULES="cdc_ether cdc_ncm"

    for MODULE in $MODULES; do
        modprobe $MODULE
    done

    sleep 5

    COUNT=0
    FOUND=0

    while [ $FOUND == "0" ]; do
        #modem not found, try detect
        DEVICES=`lsusb | awk '{print $6}'`

        for SWITCH in $DEVICES; do
            SEARCH=`ls /etc/usb_modeswitch.d/$SWITCH | wc -l`

            # vendor:product

            if [ "$SEARCH" == "1" ]; then
                logger 4G MODEM FOUND - $SWITCH - Switching ...
                DV=`echo $SWITCH | cut -d ":" -f1`
                DP=`echo $SWITCH | cut -d ":" -f2`
                /usr/sbin/usb_modeswitch -Q -c /etc/usb_modeswitch.d/$SWITCH -v $DV -p $DP

                TEST1=`cat /etc/usb_modeswitch.d/$SWITCH | grep "TargetVendor" | cut -d "=" -f2 | wc -l`
                if [ "$TEST1" == "1" ]; then
                    VENDOR=`cat /etc/usb_modeswitch.d/$SWITCH | grep "TargetVendor" | cut -d "=" -f2 | cut -d "x" -f2`
                else
                    VENDOR=`echo $SWITCH | cut -d ":" -f1`
                fi

                TEST2=`lsusb | awk '{print $6}' | grep $VENDOR | wc -l`
                if [ "$TEST2" == "1" ]; then
                    PRODUCT=`lsusb | awk '{print $6}' | grep $VENDOR | cut -d ":" -f2`
                    logger 4G MODEM ready - $VENDOR:$PRODUCT
                    echo "$VENDOR:$PRODUCT" > /tmp/4g.detect
                fi
            fi
        done

        # is modem ready?
        HL=`cat /proc/bus/usb/devices | grep Driver | grep cdc_ether | wc -l`
        NHL=`cat /proc/bus/usb/devices | grep Driver | grep cdc_ncm | wc -l`

        if [ "$HL" -gt 0 ]; then
            logger 4G MODEM found - Hilink - using cdc_ether module
            FOUND=1
            break;
        elif [ "$NHL" -gt 0 ]; then
            logger 4G MODEM found - non-Hilink - using cdc_ncm module
            FOUND=1
        fi


        if [ "$COUNT" == "5" ]; then
            logger 4G MODEM not found - process terminated!
            break;
        else
            logger 4G MODEM not found - count: $COUNT
            COUNT=`expr $COUNT + 1`
            sleep 5
        fi
    done
}

searchWAN() {
    FOUND=0
    COUNT=0

    while [ $FOUND == "0" ]; do
        for MODULE in $MODULES; do
            SEARCH=`cat /proc/bus/usb/devices | grep Driver | grep $MODULE | wc -l`

            if [ "$SEARCH" -gt 0 ]; then
                if [ "$MODULE" == "cdc_ether" ]; then
                    TYPE="hilink"
                elif [ "$MODULE" == "cdc_ncm" ]; then
                    TYPE="non-hilink"
                else
                    TYPE="unknown"
                fi

                logger 4G MODEM NDIS found - $TYPE - using $MODULE module
                nvram set 4g_module=$MODULE
                FOUND=1
                break;
            else
                if [ "$COUNT" == "5" ]; then
                    logger 4G MODEM NDIS not found - process terminated!
                    rm $LOCK
                    exit 0;
                else
                    logger 4G MODEM NDIS not found - $MODULE - count: $COUNT
                    COUNT=`expr $COUNT + 1`
                    sleep 5
                fi
            fi
        done
    done

    #search WAN interface (usbX or ethX)
    FOUND=0
    COUNT=0

    KERNEL=`uname -r | cut -d "." -f1,2,3`

    while [ $FOUND == "0" ]; do
        if [ "$KERNEL" == "2.6.36" ]; then #ARM
            WAN=`dmesg | grep $MODULE | grep register | grep "'" | cut -d " " -f3 | cut -d ":" -f1 | tail -1`
        else #MIPSEL
            WAN=`dmesg | grep $MODULE | grep register | grep "'" | cut -d ":" -f1 | tail -1`
        fi

        IS_WAN=`echo $WAN | wc -w`

        if [ "$IS_WAN" -gt 0 ]; then
            logger 4G MODEM WAN found - $TYPE - using $WAN as WAN
                nvram set wan_4g="$WAN"
            nvram set modem_type=$TYPE
            FOUND=1
        else
            if [ "$COUNT" == "5" ]; then
                logger 4G MODEM WAN not found - connection process terminated!
                rm $LOCK
                exit 0;
            else
                logger 4G MODEM WAN not found - count: $COUNT
                COUNT=`expr $COUNT + 1`
                sleep 5
            fi
        fi
    done
}

searchDiag() {
    if [ "$TYPE" == "non-hilink" ]; then #only for non-hilink

        US=`cat /proc/bus/usb/devices | grep Driver | grep usbserial | wc -l`

        if [ "$US" -gt 0 ]; then
            logger 4G MODEM found - Diagnostic interface - using usbserial module
            break;
        else
            IS_VENDOR=`echo $VENDOR | wc -w`
            if [ "$IS_VENDOR" -gt 0 ]; then
                IS_PRODUCT=`echo $PRODUCT | wc -w`
                if [ "$IS_PRODUCT" -gt 0 ]; then
                    logger 4G MODEM - loading module usbserial
                    rmmod usbserial
                    insmod usbserial vendor=0x$VENDOR product=0x$PRODUCT
                    echo "$VENDOR:$PRODUCT" > /tmp/4g.detect
                fi
            fi

            DEV=`cat /proc/bus/usb/devices | grep Driver | grep usbserial | wc -l`
            if [ "$DEV" -gt 0 ]; then
                logger 4G MODEM ready - using usbserial module
                FOUND=1
                nvram set 4g_module=usbserial
            else
                #last change. try load usbserial for each usb devices
                DEVICES=`lsusb | awk '{print $6}'`
                for SWITCH in $DEVICES; do
                    VENDOR=`echo $SWITCH | cut -d ":" -f1`
                    PRODUCT=`echo $SWITCH | cut -d ":" -f2`
                    rmmod usbserial
                    insmod usbserial vendor=0x$VENDOR product=0x$PRODUCT

                    DEV=`cat /proc/bus/usb/devices | grep Driver | grep usbserial | wc -l`
                    if [ "$DEV" -gt 0 ]; then
                        logger 4G MODEM ready - using usbserial module
                        nvram set 4g_module=usbserial
                        echo "$VENDOR:$PRODUCT" > /tmp/4g.detect
                        FOUND=1
                    fi
                done
            fi
        fi

        #search diagnostic device
        TTY=`ls /dev/ttyUSB*`

        for i in $TTY; do
            CHECKTTY=`gcom -d $i -e info | grep OK | wc -l`
            if [ "$CHECKTTY" == "1" ]; then #found working interface
                logger 4G MODEM DIAG found - $i
                nvram set modem_dev4g=$i
                DEVNR=$i
            else
                logger 4G MODEM DIAG not found
            fi
        done
    fi
}

signal() {
        if [ "$TYPE" == "non-hilink" ]; then #only for non-hilink
            #check signal strength
            CSQ=`gcom -d $DEVNR -s /etc/gcom/getstrength.gcom | grep "CSQ:" | cut -d " " -f2 | cut -d "," -f1`
            DBM=$((-113+CSQ*2))
            logger "4G MODEM Signal Strength: $DBM dBm"
        fi
}


###################################################

if [ "$1" == "connect" ]; then
    connect
elif [ "$1" == "disconnect" ]; then
    disconnect
else
    checkLock

    switchMode

    searchWAN

    searchDiag

    setPIN

    signal

    #force connection after detect 4G modem
    connect

    #remove lock
    rm $LOCK
fi
